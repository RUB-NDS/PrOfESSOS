<?xml version="1.0" encoding="UTF-8"?>
<TestPlan xmlns="http://nds.rub.de/oidc/test-model"
		  Name="OP-Test-Plan">

	<SuiteParameters>
		<Parameter Key="grant_not_needed">false</Parameter>
	</SuiteParameters>

	<LearningStep Name="LearningStep">
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPLearningBrowser</ImplementationClass>
		</BrowserSimulator>
		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.DefaultRP</ImplementationClass>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.DefaultRP</ImplementationClass>
		</RPConfig-2>
	</LearningStep>

	<TestStep Name="Authorization Code Reuse 1">
		<Description>PrOfESSOS attempts to redeem an authorization code that has already been used by another user of the same client</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPCodeReuseBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>
			
			<Parameter Key="force_auth-code_reuse_user">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<!-- not used but required in config-->
			<ImplementationClass>de.rub.nds.oidc.server.rp.DefaultRP</ImplementationClass>
		</RPConfig-2>
	</TestStep>

	<TestStep Name="Authorization Code Reuse 2">
		<Description>PrOfESSOS attempts to redeem an authorization code that was issued to and has already been used by a different client - Honest RP</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">false</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPCodeReuseBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>
			
			<Parameter Key="force-no-redeem-auth-code">false</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>
			
			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>



	<TestStep Name="Redirect URI Manipulation 1">
		<Description>PrOfESSOS tests the validation of the redirect_uri parameter. To this end, an authentication request 
			containing the redirect_uri value of another client is send to the OP</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
			
			<Parameter Key="authnreq-force-evil-redirect-uri">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
		</RPConfig-2>
	</TestStep>

	<TestStep Name="Redirect URI Manipulation 2">
		<Description>PrOfESSOS tests the validation of the redirect_uri parameter at the OP. To this end, a random subdomain
		 is prepended to the redirect_uri contained in the authentication request.</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
			
			<Parameter Key="authnreq-random-subdomain-in-redirect-uri">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
		</RPConfig-2>
	</TestStep>

	<TestStep Name="Redirect URI Manipulation 3">
		<Description>PrOfESSOS tests the validation of the redirect_uri parameter at the OP. To this end, a random path 
			fragment is appended to the redirect_uri contained in the authentication request.</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
			
			<Parameter Key="authnreq-random-path-suffix-in-redirect-uri">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
		</RPConfig-2>
	</TestStep>

	<TestStep Name="Code Hijack 1">
		<Description>PrOfESSOS issues a token request containing no redirect_uri parameter, even though one was present 
			in the authentication request.
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
			<!---->
			<Parameter Key="tokenreq-exclude-redirect-uri">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<!--not used in this test-->
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
			
		</RPConfig-2>
	</TestStep>

	<TestStep Name="Code Hijack 2">
		<Description>PrOfESSOS issues a token request containing a redirect_uri value that is registered with another 
			client.
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">false</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
			
			<Parameter Key="tokenreq-force-evil-redirect-uri">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<!--not used in this test-->
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
			
		</RPConfig-2>
	</TestStep>


	<TestStep Name="Code Hijack 3">
		<Description>PrOfESSOS issues a token request containing a redirect_uri value that does not match the
			one presented in the authentication request and is not registered for the client to which the code
			has been issued. A random path element is appended to the redirect_uri.
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">false</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
			
			<Parameter Key="tokenreq-random-path-suffix-in-redirect-uri">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<!--not used in this test-->
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
			
		</RPConfig-2>
	</TestStep>

	<TestStep Name="Code Hijack 4">
		<Description>PrOfESSOS issues a token request containing a redirect_uri value that does not match the
			one presented in the authentication request and is not registered for the client to which the code
			has been issued. A random subdomain is prepended to the redirect_uri;
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">false</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
			
			<Parameter Key="tokenreq-random-subdomain-in-redirect-uri">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<!--not used in this test-->
			<ImplementationClass>de.rub.nds.oidc.server.rp.RumRP</ImplementationClass>
			
		</RPConfig-2>
	</TestStep>

	<TestStep Name="Code Hijack 5">
		<Description>PrOfESSOS attempts to redeem an authorization code that was issued to a different client and has 
			not yet been used in a TokenRequest
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">false</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPCodeReuseBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>            
			<Parameter Key="force-no-redeem-auth-code">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>

		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>
			
			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>


	<TestStep Name="Code Hijack 6">
		<Description>PrOfESSOS attempts to redeem an authorization code using Basic Authentication with a randomly
			generate value as ClientSecret.
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.DefaultRP</ImplementationClass>
			<Parameter Key="force_random_client_secret">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>

			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>
	
	<TestStep Name="Code Hijack 7">
		<Description>PrOfESSOS attempts to redeem an authorization code including its client credentials as body 
			parameters in the POST request even though only the (default) authentication method
			"token_endpoint_auth_method": "client_secret_basic" has been registered.
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.DefaultRP</ImplementationClass>
			<Parameter Key="tokenreq-force-client-auth-post">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>

			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>

	<TestStep Name="Code Hijack 8">
		<Description>PrOfESSOS attempts to redeem an authorization code using "token_endpoint_auth_method": "client_secret_post"
			as authentication method but using a random valur for the "client_secret" parameter.
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
			<Parameter Key="enforce-client-registration">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.DefaultRP</ImplementationClass>
			<Parameter Key="register-clientauth-method-client_secret_post">true</Parameter>
			<Parameter Key="tokenreq-force-client-auth-post">true</Parameter>
			<Parameter Key="force_random_client_secret">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>

			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>
	
	<TestStep Name="Code Hijack 9">
		<Description>PrOfESSOS attempts to redeem an authorization code using "token_endpoint_auth_method": "client_secret_post" 
			as authentication method but omitting the client_secret parameter.
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
			<Parameter Key="enforce-client-registration">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.DefaultRP</ImplementationClass>
			<Parameter Key="register-clientauth-method-client_secret_post">true</Parameter>
			<Parameter Key="tokenreq-clientauth-empty-client-secret">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>

			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>
	
	<TestStep Name="Message Flow Confusion - Response Type">
		<Description><![CDATA[
		PrOfESSOS registers a Client with <code>grant_type=authorization_code</code>. In the Authentication Request, an 
		Implicit Flow is requested by using the parameter <code>response_type=token id_token</code>.
		]]>
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
			<!-- only needed if the default registration should be change -->
			<!--<Parameter Key="enforce-client-registration">true</Parameter>-->
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.DefaultRP</ImplementationClass>
			<!--<Parameter Key="register-grant-type-authorization_code">true</Parameter>-->
			<Parameter Key="authnreq-response_type-id_token">true</Parameter>
			<Parameter Key="authnreq-response_type-token">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>

			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>


	<TestStep Name="Message Flow Confusion - Response Mode">
		<Description><![CDATA[
		 PrOfESSOS requests an <code>id_token</code> using the Implicit Flow and sets the <code>response_mode</code> 
		 parameter to <code>query</code>. As per <strong>OAuth 2.0 Multiple Response Type Encoding Practices</strong>, the OP must 
		 not include tokens in the URL query parameters.
			]]>
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
			<!-- only needed if the default registration should be change -->
			<Parameter Key="enforce-client-registration">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.DefaultRP</ImplementationClass>
			<Parameter Key="register-grant-type-implicit">true</Parameter>
			<Parameter Key="register-response-type-token-id_token">true</Parameter>
			<Parameter Key="authnreq-response_type-id_token">true</Parameter>
			<Parameter Key="authnreq-response_type-token">true</Parameter>
			<Parameter Key="authnreq-response_mode-query">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>

			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>
	
	
	<TestStep Name="PKCE 1 - TR: Invalid Verifier">
		<Description><![CDATA[
		PrOfESSOS tests the validation of the PKCE <code>code_verifier</code>. An invalid <code>code_verifier</code> is submitted 
			to the OP in the Token Request.
		]]>
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
			<!-- only needed if the default registration should be change -->
			<!--<Parameter Key="enforce-client-registration">true</Parameter>-->
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.PkceRP</ImplementationClass>
			<Parameter Key="authnreq-pkce-method-s256">true</Parameter>
			<Parameter Key="tokenreq-invalid-pkce-verifier">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>
			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>

	<TestStep Name="PKCE 2 - TR: Exclude Verifier">
		<Description><![CDATA[
		 PrOfESSOS tests the validation of the PKCE <code>code_verifier</code>. A <code>code_challenge</code> is included in the 
			Authentication Request but the following Token Request does not include a <code>code_verifier</code>.
		]]>
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
			<!-- only needed if the default registration should be change -->
			<!--<Parameter Key="enforce-client-registration">true</Parameter>-->
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.PkceRP</ImplementationClass>
			<Parameter Key="authnreq-pkce-method-s256">true</Parameter>
			<Parameter Key="tokenreq-pkce-verifier-excluded">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>
			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>

	<TestStep Name="PKCE 3 - AR: Exclude Challenge">
		<Description><![CDATA[
			PrOfESSOS tests the validation of the PKCE <code>code_verifier</code>. A <code>code_verifier</code> is included in the
			Token Request even though the Authentication Request did not include a <code>code_challenge</code>.
			]]>
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
			<!-- only needed if the default registration should be change -->
			<!--<Parameter Key="enforce-client-registration">true</Parameter>-->
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.PkceRP</ImplementationClass>
			<Parameter Key="authnreq-pkce-method-s256">true</Parameter>
			<Parameter Key="authnreq-pkce-exclude-challenge-param">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.CodeReuseRP</ImplementationClass>
			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>
	
	<TestStep Name="PKCE 4 - Downgrade to Plain">
		<Description>
			<![CDATA[
			PrOfESSOS tests the validation of the PKCE <code>code_verifier</code>. No <code>code_challenge_method</code> parameter is 
			included in the Authentication Request, indicating that the default method 'S256' is to be used. In the 
			following Token Request, PrOfESSOS submits the original value of the <code>code_challenge</code> as <code>code_verifier</code>, 
			as if using <code>code_challenge_method=plain</code>. In addition, an (invalid) parameter <code>code_challenge_method=plain</code>
			is added to the Token Request.
			]]>
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.PkceRP</ImplementationClass>
			<Parameter Key="authnreq-pkce-exclude-method-param">true</Parameter>
			<Parameter Key="tokenreq-add-pkce-method-param-plain">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.PkceRP</ImplementationClass>
			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>

	<TestStep Name="PKCE 5 - Verifier Confusion">
		<Description><![CDATA[ 
			PrOfESSOS tests if the PKCE <code>code_verifier</code> is bound to the Authorization Code. Here, 
			PrOfESSOS submits an unused <code>code_verifier</code> that was issued for a different Authorization Code. 
		]]>
		</Description>
		<TestParameters>
			<Parameter Key="is_single_rp_test">true</Parameter>
		</TestParameters>
		<BrowserSimulator>
			<ImplementationClass>de.rub.nds.oidc.browser.op.OPCodeReuseBrowser</ImplementationClass>
		</BrowserSimulator>

		<RPConfig-1>
			<ImplementationClass>de.rub.nds.oidc.server.rp.PkceRP</ImplementationClass>
			<Parameter Key="force-no-redeem-auth-code">true</Parameter>
			<Parameter Key="tokenreq-pkce-from-other-session">true</Parameter>
			<Parameter Key="authnreq-pkce-method-s256">true</Parameter>
			<Parameter Key="code-redemption-fails-test">true</Parameter>
		</RPConfig-1>
		<RPConfig-2>
			<ImplementationClass>de.rub.nds.oidc.server.rp.PkceRP</ImplementationClass>
			<!--<Parameter Key="force-use-stored-auth-code">true</Parameter>-->
		</RPConfig-2>
	</TestStep>

	<!--<TestStep Name="PKCE 4 positive test using DefaultRP ">-->
		<!--<Description>PKCE positive test-->
		<!--</Description>-->
		<!--<TestParameters>-->
			<!--<Parameter Key="is_single_rp_test">true</Parameter>-->
		<!--</TestParameters>-->
		<!--<BrowserSimulator>-->
			<!--<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>-->
		<!--</BrowserSimulator>-->

		<!--<RPConfig-1>-->
			<!--<ImplementationClass>de.rub.nds.oidc.server.rp.DefaultRP</ImplementationClass>-->
			<!--&lt;!&ndash;<ImplementationClass>de.rub.nds.oidc.server.rp.PkceRP</ImplementationClass>&ndash;&gt;-->
			<!--&lt;!&ndash;<Parameter Key="force-no-redeem-auth-code">true</Parameter>&ndash;&gt;-->
			<!--&lt;!&ndash;<Parameter Key="tokenreq-pkce-from-other-session">true</Parameter>&ndash;&gt;-->
			<!--<Parameter Key="authnreq-pkce-method-s256">true</Parameter>-->
		<!--</RPConfig-1>-->
		<!--<RPConfig-2>-->
			<!--<ImplementationClass>de.rub.nds.oidc.server.rp.PkceRP</ImplementationClass>-->
			<!--&lt;!&ndash;<Parameter Key="force-use-stored-auth-code">true</Parameter>&ndash;&gt;-->
		<!--</RPConfig-2>-->
	<!--</TestStep>-->

	<!--<TestStep Name="PKCE positive test using PkceRP">-->
		<!--<Description>PKCE positive test-->
		<!--</Description>-->
		<!--<TestParameters>-->
			<!--<Parameter Key="is_single_rp_test">true</Parameter>-->
		<!--</TestParameters>-->
		<!--<BrowserSimulator>-->
			<!--<ImplementationClass>de.rub.nds.oidc.browser.op.OPRumBrowser</ImplementationClass>-->
		<!--</BrowserSimulator>-->

		<!--<RPConfig-1>-->
			<!--&lt;!&ndash;<ImplementationClass>de.rub.nds.oidc.server.rp.DefaultRP</ImplementationClass>&ndash;&gt;-->
			<!--<ImplementationClass>de.rub.nds.oidc.server.rp.PkceRP</ImplementationClass>-->
			<!--&lt;!&ndash;<Parameter Key="force-no-redeem-auth-code">true</Parameter>&ndash;&gt;-->
			<!--&lt;!&ndash;<Parameter Key="tokenreq-pkce-from-other-session">true</Parameter>&ndash;&gt;-->
			<!--<Parameter Key="authnreq-pkce-method-s256">true</Parameter>-->
		<!--</RPConfig-1>-->
		<!--<RPConfig-2>-->
			<!--<ImplementationClass>de.rub.nds.oidc.server.rp.PkceRP</ImplementationClass>-->
			<!--&lt;!&ndash;<Parameter Key="force-use-stored-auth-code">true</Parameter>&ndash;&gt;-->
		<!--</RPConfig-2>-->
	<!--</TestStep>-->


</TestPlan>
